{"version":3,"file":"static/js/139.c6343fcf.chunk.js","mappings":"mJAMA,IANc,WACZ,OACE,uBAAG,0CAEN,C,mBCJD,IACMA,EAAU,CAACC,QAAS,CAACC,cAAe,+NAU1C,IARA,SAAoBC,GAChB,OAAOC,MAAM,GAAD,OAJC,+BAID,YAAgBD,GAASH,GAASK,MAAM,SAAAC,GAChD,OAAIA,EAASC,GAEND,EAASE,OAFQC,QAAQC,OAAOJ,EAASK,OAGnD,GACJ,C,0GCRD,EAA0B,sBAA1B,EAAwD,oB,4CCoBxD,EAlBmB,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACdC,GAAWC,EAAAA,EAAAA,MAEXC,EAAaH,EAAOI,KAAI,gBAAGC,EAAH,EAAGA,GAAIC,EAAP,EAAOA,MAAOC,EAAd,EAAcA,KAAd,OAC5B,eAAaC,UAAU,YAAvB,UACE,SAAC,KAAD,CAASC,GAAE,kBAAaJ,GAAMK,MAAO,CAAEC,KAAMV,GAAYO,UAAU,OAAnE,gBACGF,QADH,IACGA,EAAAA,EAASC,KAFLF,EADmB,IAQ9B,OACE,0BACE,wBAAKF,KAGV,ECgBD,EA5Ba,WACX,OAA4BS,EAAAA,EAAAA,UAAS,IAArC,eAAOZ,EAAP,KAAea,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbE,GAAS,IACTE,EAAAA,EAAAA,GAAU,oBACP1B,MAAK,YAAkB,IAAf2B,EAAc,EAAdA,QACPP,GAAU,OAAIO,GACf,IACAC,OAAM,kBAAMJ,GAAS,EAAf,IACNK,SAAQ,kBAAMP,GAAa,EAAnB,GACZ,GAAE,KAGD,iBAAKP,UAAWe,EAAhB,WACE,eAAIf,UAAWe,EAAf,SAA0B,qBAE1B,SAAC,EAAD,CAAYvB,OAAQA,IAEnBc,IAAa,SAAC,IAAD,IACbE,IAAS,SAACQ,EAAA,EAAD,MAGf,C","sources":["components/Error/Error.jsx","components/services.js","webpack://goit-react-hw-05-movies/./src/pages/Home/Home.module.css?1370","pages/Home/TrendsList.jsx","pages/Home/Home.jsx"],"sourcesContent":["const Error = () => {\n  return (\n    <p>Oops, something went wrong. Try again!</p>\n  )\n}\n\nexport default Error","const BASE_URL = 'https://api.themoviedb.org/3';\nconst OPTIONS = {headers: {Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxZWIxOWFlZTJiNTU2ZTg3MmFlYjRkMTJmM2UzZDBlZiIsInN1YiI6IjY0NmY2NjQzMTdjNDQzMDBjMjI0OTMzZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nSQ1KLIUK97f2ypbV38GEeFR4HBt9RE_gR1cSa6SUjM'}}\n\nfunction fetchFunc (query) {\n    return fetch(`${BASE_URL}/${query}`, OPTIONS).then( response => {\n        if(!response.ok) return Promise.reject(response.status)\n        // console.log(response)\n        return response.json(); \n    })\n}\n\nexport default fetchFunc;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"movList\":\"Home_movList__aYjb4\",\"title\":\"Home_title__M5yXd\"};","import React from 'react';\r\nimport { NavLink, useLocation } from 'react-router-dom';\r\n\r\nconst TrendsList = ({ trends }) => {\r\n  const location = useLocation();\r\n\r\n  const trendsList = trends.map(({ id, title, name }) => (\r\n    <li key={id} className=\"list_item\">\r\n      <NavLink to={`/movies/${id}`} state={{ from: location }} className=\"link\">\r\n        {title ?? name}\r\n      </NavLink>\r\n    </li>\r\n  ));\r\n\r\n  return (\r\n    <div>\r\n      <ul>{trendsList}</ul>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default TrendsList;\r\n","import fetchFunc from 'components/services';\nimport { useEffect, useState } from 'react';\nimport css from './Home.module.css';\nimport Loading from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport TrendsList from './TrendsList';\n\nconst Home = () => {\n  const [trends, setTrends] = useState([]);\n  const [isLoading, setIsLoading] = useState(true);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n    fetchFunc('trending/all/day')\n      .then(({ results }) => {\n        setTrends([...results]);\n      })\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, []);\n\n  return (\n    <div className={css.movList}>\n      <h2 className={css.title}>Trending today:</h2>\n\n      <TrendsList trends={trends} />\n\n      {isLoading && <Loading />}\n      {error && <Error />}\n    </div>\n  );\n};\n\nexport default Home;\n"],"names":["OPTIONS","headers","Authorization","query","fetch","then","response","ok","json","Promise","reject","status","trends","location","useLocation","trendsList","map","id","title","name","className","to","state","from","useState","setTrends","isLoading","setIsLoading","error","setError","useEffect","fetchFunc","results","catch","finally","css","Error"],"sourceRoot":""}