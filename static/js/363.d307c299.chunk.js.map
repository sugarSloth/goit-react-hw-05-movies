{"version":3,"file":"static/js/363.d307c299.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Reviews/Reviews.module.scss?0ade","components/Reviews/Reviews.jsx","tmdbApi/tmdb-api.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"reviews\":\"Reviews_reviews__N4I2S\"};","import { useCallback, useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { getReviews } from 'tmdbApi/tmdb-api';\nimport scss from './Reviews.module.scss';\n\nexport default function Reviews() {\n  const { id } = useParams();\n  const [reviews, setReviews] = useState([]);\n\n  const updateReviews = useCallback(() => {\n    getReviews(id)\n      .then(data => {\n        const results = data.results || [];\n        if (results.length !== 0) {\n          setReviews(\n            results.map(({ author_details: { username }, content, id }) => ({\n              nickname: username.toUpperCase(),\n              content,\n              id,\n            }))\n          );\n        }\n      })\n      .catch(error => console.log(error));\n  }, [id]);\n\n  useEffect(() => {\n    updateReviews();\n  }, [updateReviews]);\n\n  const notReviewsMessage = 'We don`t have any reviews for this movie';\n\n  return reviews.length === 0 ? (\n    <p>{notReviewsMessage}</p>\n  ) : (\n    <ul className={scss.reviews}>\n      {reviews.map(({ nickname, content, id }) => (\n        <li key={id}>\n          <h4>{`Author: ${nickname}`}</h4>\n          <article>{content}</article>\n        </li>\n      ))}\n    </ul>\n  );\n}\n","const ORIGIN = 'https://api.themoviedb.org/3/';\nconst API_TOKEN =\n  'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiJiODRhNTAzMjMxNWZiYTc1ZjI0MGI3NDVjYTdjYzBhZiIsInN1YiI6IjY0NzBiZWJlMzM2ZTAxMDBlODBjNTYyZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.f2kRYsL7gY4sDbVFKpKd_M1rnGrppV5NDL6eESs9EQU';\n\nconst urlParams = {\n  BASE_URL: 'https://image.tmdb.org/t/p/',\n  POSTER_SIZE: 'w500',\n  PHOTO_SIZE: 'w300',\n};\n\nconst options = {\n  method: 'GET',\n  headers: {\n    accept: 'application/json',\n    Authorization: API_TOKEN,\n  },\n};\n\nconst requestParameters = {\n  trending: {\n    pathname: 'trending/movie/day',\n    queries: { language: 'en-US' },\n  },\n  movie: {\n    pathname: 'search/movie',\n    queries: {\n      query: '',\n      include_adult: false,\n      language: 'en-US',\n      page: 1,\n    },\n  },\n  details: {\n    pathname: '',\n    queries: { language: 'en-US' },\n  },\n  cast: {\n    pathname: '',\n    queries: { language: 'en-US' },\n  },\n  reviews: {\n    pathname: '',\n    queries: { language: 'en-US', page: 1 },\n  },\n};\n\nasync function getTrending() {\n  const url = buildUrlString(requestParameters.trending);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function getMovies(query) {\n  requestParameters.movie.queries.query = query;\n  const url = buildUrlString(requestParameters.movie);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function getDetails(id) {\n  requestParameters.details.pathname = `movie/${id}`;\n  const url = buildUrlString(requestParameters.details);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function getCast(id) {\n  requestParameters.cast.pathname = `movie/${id}/credits`;\n  const url = buildUrlString(requestParameters.cast);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nasync function getReviews(id) {\n  requestParameters.reviews.pathname = `movie/${id}/reviews`;\n  const url = buildUrlString(requestParameters.reviews);\n  try {\n    const response = await fetch(url, options);\n    return await response.json();\n  } catch (err) {\n    console.error(err);\n  }\n}\n\nfunction buildUrlString(requestParams) {\n  const { pathname, queries } = requestParams;\n  const queryString = buildQueryString(queries);\n  return `${ORIGIN}${pathname}?${queryString}`;\n}\n\nfunction buildQueryString(queries) {\n  return Object.entries(queries)\n    .map(([key, value]) => `${key}=${value}`)\n    .join('&');\n}\n\nexport { getTrending, getMovies, getDetails, getCast, getReviews, urlParams };\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}"],"names":["Reviews","id","useParams","useState","reviews","setReviews","updateReviews","useCallback","getReviews","then","data","results","length","map","username","author_details","content","nickname","toUpperCase","catch","error","console","log","useEffect","className","scss","urlParams","BASE_URL","POSTER_SIZE","PHOTO_SIZE","options","method","headers","accept","Authorization","requestParameters","trending","pathname","queries","language","movie","query","include_adult","page","details","cast","getTrending","url","buildUrlString","fetch","response","json","getMovies","getDetails","getCast","requestParams","queryString","Object","entries","key","value","join","buildQueryString","asyncGeneratorStep","gen","resolve","reject","_next","_throw","arg","info","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","err","undefined"],"sourceRoot":""}