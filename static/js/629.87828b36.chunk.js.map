{"version":3,"file":"static/js/629.87828b36.chunk.js","mappings":"mJAMA,IANc,WACZ,OACE,uBAAG,0CAEN,C,mBCJD,IACMA,EAAU,CAACC,QAAS,CAACC,cAAe,+NAU1C,IARA,SAAoBC,GAChB,OAAOC,MAAM,GAAD,OAJC,+BAID,YAAgBD,GAASH,GAASK,MAAM,SAAAC,GAChD,OAAIA,EAASC,GAEND,EAASE,OAFQC,QAAQC,OAAOJ,EAASK,OAGnD,GACJ,C,oHCRD,EAAuB,mBAAvB,EAAiD,mBAAjD,EAAmF,2B,SC2BnF,EAtBiB,SAAC,GAAc,IACxBC,EADuB,EAAXC,KACKC,KAAI,gBAAGC,EAAH,EAAGA,UAAWC,EAAd,EAAcA,GAAIC,EAAlB,EAAkBA,KAAMC,EAAxB,EAAwBA,aAAxB,OACzB,gBAAaC,UAAWC,EAAxB,WACE,gBACEC,IACEH,EAAY,yCAC0BA,GAR9C,4KAWMI,IAAKL,EACLM,MAAO,OAET,iBAAKJ,UAAWC,EAAhB,WACE,wBAAKH,KACL,wBAAKF,SAZAC,EADgB,IAkB3B,OAAO,eAAIG,UAAWC,EAAf,SAA0BR,GAClC,E,QCOD,EA1Ba,WACX,IAAQY,GAAYC,EAAAA,EAAAA,MAAZD,QACR,GAAwBE,EAAAA,EAAAA,UAAS,IAAjC,eAAOb,EAAP,KAAac,EAAb,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,WAAS,GAAnC,eAAOI,EAAP,KAAcC,EAAd,KAaA,OAXAC,EAAAA,EAAAA,YAAU,WACRH,GAAa,GACbE,GAAS,IACTE,EAAAA,EAAAA,GAAU,SAAD,OAAUT,EAAV,aACNnB,MAAK,YAAe,IAAZQ,EAAW,EAAXA,KACPc,EAAQd,EACT,IACAqB,OAAM,kBAAMH,GAAS,EAAf,IACNI,SAAQ,kBAAMN,GAAa,EAAnB,GACZ,GAAE,CAACL,KAGF,gCACGI,IAAa,SAAC,IAAD,IACbE,IAAS,SAACM,EAAA,EAAD,IACO,IAAhBvB,EAAKwB,QAAe,SAAC,EAAD,CAAUxB,KAAMA,KAAW,uBAAG,qBAGxD,C","sources":["components/Error/Error.jsx","components/services.js","webpack://goit-react-hw-05-movies/./src/pages/Cast/Cast.module.css?cfbb","pages/Cast/CastList.jsx","pages/Cast/Cast.jsx"],"sourcesContent":["const Error = () => {\n  return (\n    <p>Oops, something went wrong. Try again!</p>\n  )\n}\n\nexport default Error","const BASE_URL = 'https://api.themoviedb.org/3';\nconst OPTIONS = {headers: {Authorization: 'Bearer eyJhbGciOiJIUzI1NiJ9.eyJhdWQiOiIxZWIxOWFlZTJiNTU2ZTg3MmFlYjRkMTJmM2UzZDBlZiIsInN1YiI6IjY0NmY2NjQzMTdjNDQzMDBjMjI0OTMzZCIsInNjb3BlcyI6WyJhcGlfcmVhZCJdLCJ2ZXJzaW9uIjoxfQ.nSQ1KLIUK97f2ypbV38GEeFR4HBt9RE_gR1cSa6SUjM'}}\n\nfunction fetchFunc (query) {\n    return fetch(`${BASE_URL}/${query}`, OPTIONS).then( response => {\n        if(!response.ok) return Promise.reject(response.status)\n        // console.log(response)\n        return response.json(); \n    })\n}\n\nexport default fetchFunc;\n\n","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"Cast_list__oOD41\",\"item\":\"Cast_item__vxHbm\",\"name_wrapper\":\"Cast_name_wrapper__4ySFT\"};","import React from 'react';\nimport css from './Cast.module.css';\n\nconst defaultProfileImage =\n  'https://thumbs.dreamstime.com/b/profile-anonymous-face-icon-gray-silhouette-person-male-businessman-profile-default-avatar-photo-placeholder-isolated-white-117831744.jpg';\n\nconst CastList = ({ cast }) => {\n  const castItems = cast.map(({ character, id, name, profile_path }) => (\n    <li key={id} className={css.item}>\n      <img\n        src={\n          profile_path\n            ? `https://image.tmdb.org/t/p/w500${profile_path}`\n            : defaultProfileImage\n        }\n        alt={name}\n        width={120}\n      />\n      <div className={css.name_wrapper}>\n        <h5>{name}</h5>\n        <h6>{character}</h6>\n      </div>\n    </li>\n  ));\n\n  return <ul className={css.list}>{castItems}</ul>;\n};\n\nexport default CastList;\n","import React, { useEffect, useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport Loading from 'components/Loader/Loader';\nimport Error from 'components/Error/Error';\nimport CastList from './CastList';\nimport fetchFunc from 'components/services';\n\nconst Cast = () => {\n  const { movieId } = useParams();\n  const [cast, setCast] = useState([]);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n\n  useEffect(() => {\n    setIsLoading(true);\n    setError(false);\n    fetchFunc(`movie/${movieId}/credits`)\n      .then(({ cast }) => {\n        setCast(cast);\n      })\n      .catch(() => setError(true))\n      .finally(() => setIsLoading(false));\n  }, [movieId]);\n\n  return (\n    <>\n      {isLoading && <Loading />}\n      {error && <Error />}\n      {cast.length !== 0 ? <CastList cast={cast} /> : <p>No information</p>}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["OPTIONS","headers","Authorization","query","fetch","then","response","ok","json","Promise","reject","status","castItems","cast","map","character","id","name","profile_path","className","css","src","alt","width","movieId","useParams","useState","setCast","isLoading","setIsLoading","error","setError","useEffect","fetchFunc","catch","finally","Error","length"],"sourceRoot":""}